include:
  - ./ops/dev/observability/docker-compose.yml
  - ./ops/dev/raft/docker-compose.yml

x-dotnet_sync: &dotnet_sync
  develop:
    watch:
      - action: sync
        path: ./src/
        target: ./src/

x-akka_actor_env: &akka_actor_env
  ASPNETCORE_ENVIRONMENT: Development
  ASPNETCORE_URLS: http://+:8080
  ObservabilityOptions__CollectorUrl: http://collector:4317
  ObservabilityOptions__ServiceName: "AsteroidActorSystem"
  RaftConnectionOptions__GatewayUrl: http://gateway:8080
  ActorOptions__ActorSeeds: "akka.tcp://Asteroids@lighthouse:4053"
  DOTNET_WATCH_SUPPRESS_BROWSER_REFRESH: 1
  TZ: America/Denver

x-akka_actor_base: &akka_actor_base
  build:
    context: ./src/
    dockerfile: ./RealTimeCommunication/Dockerfile
    target: development
  <<: *dotnet_sync

x-asteroid_client_env: &asteroid_client_env
  ASPNETCORE_ENVIRONMENT: Development
  ASPNETCORE_URLS: http://+:8080
  SignalREnv__AccountHubUrl: http://realtime:8080/accountHub
  SignalREnv__LobbyHubUrl: http://realtime:8080/lobbyHub
  SignalREnv__ErrorHubUrl: http://realtime:8080/errorHub
  ObservabilityOptions__CollectorUrl: http://collector:4317
  DOTNET_WATCH_SUPPRESS_BROWSER_REFRESH: 1
  TZ: America/Denver

x-asteroid_client_base: &asteroid_client_base
  build:
    context: ./src/
    dockerfile: ./Asteroids/Dockerfile
    target: development
  <<: *dotnet_sync

services:

  lighthouse:
    # https://github.com/petabridge/lighthouse
    image: petabridge/lighthouse:latest
    hostname: lighthouse
    ports:
      - "9110:9110"
      - "4053:4053"
    environment:
      ACTORSYSTEM: "Asteroids"
      CLUSTER_PORT: 4053
      CLUSTER_IP: "lighthouse"
      CLUSTER_SEEDS: "akka.tcp://Asteroids@lighthouse:4053"
    restart: unless-stopped

  nginx:
    depends_on:
      - asteroid-client-1
      - asteroid-client-2
      - grafana
    build:
      context: ./ops/dev/
      dockerfile: nginx.Dockerfile
    ports:
      - "3001:80"
    develop:
      watch:
        - action: sync+restart
          path: ./ops/dev/nginx.conf
          target: /etc/nginx/conf.d/default.conf

  realtime:
    environment:
      ActorOptions__ActorRoles: "SignalR"
      ActorOptions__ActorHostName: "realtime"
      <<: *akka_actor_env
    <<: *akka_actor_base

  actor-node-1:
    environment:
      ActorOptions__ActorRoles: "Lobbies"
      ActorOptions__ActorHostName: "actor-node-1"
      <<: *akka_actor_env
    <<: *akka_actor_base

  actor-node-2:
    environment:
      ActorOptions__ActorRoles: "Lobbies"
      ActorOptions__ActorHostName: "actor-node-2"
      <<: *akka_actor_env
    <<: *akka_actor_base

  asteroid-client-1:
    <<: *asteroid_client_base
    environment:
      <<: *asteroid_client_env
      ObservabilityOptions__ServiceName: "AsteroidClient1"

  asteroid-client-2:
    <<: *asteroid_client_base
    environment:
      <<: *asteroid_client_env
      ObservabilityOptions__ServiceName: "AsteroidClient2"
