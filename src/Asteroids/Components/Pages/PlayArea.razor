@using Asteroids.Components.Sprites
@using Asteroids.Shared.GameEntities
@inject IToastService ToastService
<div class="play-area" tabindex="0" @onkeydown="@HandleKeyDown" @onkeyup="@HandleKeyUp">
    @foreach (var ship in State.Ships)
    {
        <ShipComponent XCoordinate="@ship.XCoordinate" YCoordinate="@ship.YCoordinate" Rotation="@ship.Rotation" />
    }

    @foreach (var asteroid in State.Asteroids)
    {
        <AsteroidComponent XCoordinate="@asteroid.XCoordinate" YCoordinate="@asteroid.YCoordinate"
            Rotation="@asteroid.Rotation" Size="@asteroid.Size" />
    }
</div>

<style>
    .play-area {
        position: relative;
        width: 100%;
        height: 600px;
        background-color: #000;
    }

    .play-area:focus {
        border-color: #fa0202;
    }
</style>

@code {
    [Parameter]
    public LobbyState State { get; set; }

    [Parameter]
    public EventCallback<HashSet<string>> EventCallback { get; set; }

    private string[] _movementKeys = ["w", "a", "d"];
    private HashSet<string> _pressedKeys = [];

    protected override void OnInitialized()
    {
        Console.WriteLine("Initialized");
        Console.WriteLine($"The number of ships is {State.Ships.Count}");
    }

    private void HandleKeyDown(KeyboardEventArgs e)
    {
        if (_movementKeys.Contains(e.Key))
        {
            _pressedKeys.Add(e.Key);
        }
        EventCallback.InvokeAsync(_pressedKeys);
    }

    private void HandleKeyUp(KeyboardEventArgs e)
    {
        if (_movementKeys.Contains(e.Key))
        {
            _pressedKeys.Remove(e.Key);
        }
        EventCallback.InvokeAsync(_pressedKeys);
    }
}